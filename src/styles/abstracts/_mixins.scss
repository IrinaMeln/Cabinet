// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin BGcover {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

@mixin BGcontain {
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
}

@mixin media($minmax, $media) {
  @each $size, $resolution in $sizes {
    @if $media == $size {
      @media only screen and (#{$minmax}-width: $resolution) {
        @content;
      }
    }
  }
}

/* Стандартный transition для hover-анимаций */

@mixin transition {
  transition: $transition-base;
}

/* Миксин замены цвета placeholder у input.
Нужно добавить в стилях элемента конструкцию вида @include placeholder(#000); */
@mixin placeholder($color, $font) {
  &::-webkit-input-placeholder {
    color: $color;
    font-size: $font;
  }

  &::-moz-placeholder {
    color: $color;
    font-size: $font;
  }

  &:-ms-input-placeholder {
    color: $color;
    font-size: $font;
  }
}

@mixin width-flex($width) {
  width: $width;
  min-width: $width;
}

@mixin background($url) {
  background-image: url('../img/' + $url);
  background-position: center;
  background-repeat: no-repeat;
}

@mixin background-contain($url) {
  background-image: url('../img/' + $url);
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
}

@mixin background-cover($url) {
  background-image: url('../img/' + $url);
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}
@mixin background-cover-top($url) {
  background-image: url('../img/' + $url);
  background-position: center top;
  background-repeat: no-repeat;
  background-size: cover;
}
@mixin background-cover-right($url) {
  background-image: url('../img/' + $url);
  background-position: center right;
  background-repeat: no-repeat;
  background-size: cover;
}

@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin hover-link($color) {
  &:hover {
    color: $color;
  }
}
@mixin df {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin last-mb-0 {
  &:last-child {
    margin-bottom: 0;
  }
}
@mixin last-mr-0 {
  &:last-child {
    margin-right: 0;
  }
}

@mixin before-mr($img, $width, $height, $mr) {
  display: inline-flex;
  align-items: center;
  &:before {
    content: '';
    @include background-contain($img);
    @include width-flex($width);
    height: $height;
    margin-right: $mr;
  }
}

@mixin before-ml($img, $width, $height, $ml) {
  display: inline-flex;
  align-items: center;
  &:before {
    content: '';
    @include background-contain($img);
    @include width-flex($width);
    height: $height;
    margin-left: $ml;
  }
}

@mixin after-ml($img, $width, $height, $ml) {
  display: inline-flex;
  align-items: center;
  &:after {
    content: '';
    @include background-contain($img);
    @include width-flex($width);
    height: $height;
    margin-left: $ml;
  }
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin h1 {
  font-size: rem(32px);
  font-weight: 900;
}

@mixin h2 {
  font-size: rem(40px);
  font-weight: 900;
}

@mixin h3 {
  font-size: rem(28px);
  font-weight: 900;
}
